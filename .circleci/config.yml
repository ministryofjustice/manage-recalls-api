version: 2.1

# slack-fail-post-step: &slack-fail-post-step
#   post-steps:
#     - slack/notify:
#         event: fail
#         branch_pattern: main
#         channel: << pipeline.parameters.alerts-slack-channel >>
#         custom: |
#           {
#             "text": "",
#             "blocks": [
#               {
#                 "type": "section",
#                 "text": {
#                   "type": "mrkdwn",
#                   "text": "‚ùå *Failure* `${CIRCLE_PROJECT_REPONAME}` - `${CIRCLE_JOB}` (Build: #${CIRCLE_BUILD_NUM}) on `${CIRCLE_BRANCH}`"
#                 }
#               },
#               {
#                 "type": "actions",
#                 "elements": [
#                   {
#                     "type": "button",
#                     "text": { "type": "plain_text", "text": "View Job" },
#                     "url": "${CIRCLE_BUILD_URL}"
#                   }
#                 ]
#               }
#             ]
#           }

orbs:
  hmpps: ministryofjustice/hmpps@3.14
  gradle: circleci/gradle@2.2.0
  mem: circleci/rememborb@0.0.1
  slack: circleci/slack@4.5

parameters:
  alerts-slack-channel:
    type: string
    default: ppud-replacement-devs
  releases-slack-channel:
    type: string
    default: ppud-replacement-releases
  only_run_pact_workflow:
    type: boolean
    default: false
  pact_consumer_tags:
    type: string
    default: not_set

_db_minio_docker_config: &db_minio_docker_config
  - image: cimg/openjdk:17.0
  - image: postgres:13-alpine
    environment:
      POSTGRES_USER: ppud_user
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: manage_recalls
  - image: minio/minio:RELEASE.2022-01-28T02-28-16Z
    environment:
      MINIO_ROOT_USER: ANYTHING_GOES
      MINIO_ROOT_PASSWORD: ANYTHING_GOES
    entrypoint: sh
    command: -c 'mkdir -p /data/test-manage-recalls-api && /opt/bin/minio server /data --address ":4566" --console-address ":9001"'

_db_minio_gotenberg_docker_config: &db_minio_gotenberg_docker_config
  - image: cimg/openjdk:17.0
  - image: gotenberg/gotenberg:7.5.0
  - image: postgres:13-alpine
    environment:
      POSTGRES_USER: ppud_user
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: manage_recalls
  - image: minio/minio:RELEASE.2022-01-28T02-28-16Z
    environment:
      MINIO_ROOT_USER: ANYTHING_GOES
      MINIO_ROOT_PASSWORD: ANYTHING_GOES
    entrypoint: sh
    command: -c 'mkdir -p /data/test-manage-recalls-api && /opt/bin/minio server /data --address ":4566" --console-address ":9001"'

executors:
  local-docker:
    docker:
      - image: cimg/python:3.9
    working_directory: ~/app

jobs:
  validate: # schema validation warning for lack of executor but passing on default (vs. occasional OOM with "hmpps/java")
    docker: *db_minio_docker_config
    steps:
      - checkout
      - hmpps/install_aws_cli
      - hmpps/wait_till_ready:
          port: 4566
      - gradle/with_cache:
          cache_checksum_file: "build.gradle.kts"
          steps:
            - run:
                name: Run check
                command: |
                  ./gradlew check
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/reports/tests

  document-generation-tests: # schema validation warning for lack of executor but passing on default (vs. OOM with "hmpps/java")
    docker: *db_minio_gotenberg_docker_config
    steps:
      - checkout
      - hmpps/install_aws_cli
      - hmpps/wait_till_ready:
          port: 4566
      - checkout
      - gradle/with_cache:
          cache_checksum_file: "build.gradle.kts"
          steps:
            - run:
                name: Run document generation tests
                command: |
                  export GOTENBERG_ENDPOINT_URL=http://localhost:3000
                  ./gradlew documentGenerationTest
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/reports/tests

  verify_pact_and_publish: # schema validation warning for lack of executor but passing on default (occasional OOM with "hmpps/java")
    parameters:
      consumer_tags:
        type: string
    environment:
      PACTBROKER_HOST: pact-broker-prod.apps.live-1.cloud-platform.service.justice.gov.uk
    docker: *db_minio_docker_config
    steps:
      - checkout
      - hmpps/install_aws_cli
      - hmpps/wait_till_ready:
          port: 4566
      - checkout
      - gradle/with_cache:
          cache_checksum_file: "build.gradle.kts"
          steps:
            - run:
                command: |
                  PACT_PROVIDER_VERSION="$CIRCLE_SHA1" \
                    PACT_PROVIDER_TAG="$CIRCLE_BRANCH" \
                    PACTBROKER_CONSUMERVERSIONSELECTORS_TAGS="<< parameters.consumer_tags >>" \
                    PACT_PUBLISH_RESULTS="true" \
                    PACTBROKER_AUTH_USERNAME="$PACT_BROKER_USERNAME" \
                    PACTBROKER_AUTH_PASSWORD="$PACT_BROKER_PASSWORD" \
                    ./gradlew verifyPactAndPublish
      #                  PACT_INCLUDEWIPPACTSSINCE="2021-11-17" \
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/reports/tests

  can_i_deploy:
    environment:
      PACT_BROKER_BASE_URL: https://pact-broker-prod.apps.live-1.cloud-platform.service.justice.gov.uk
      PACT_BROKER_DISABLE_SSL_VERIFICATION: "true"
    executor: hmpps/node
    parameters:
      environment:
        type: string
    steps:
      - run:
          name: Run Pact can-i-deploy
          command: |
            npx --package='@pact-foundation/pact-node' \
                pact-broker can-i-deploy --pacticipant manage-recalls-api --broker-base-url $PACT_BROKER_BASE_URL \
                --version $CIRCLE_SHA1 \
                --to deployed:<< parameters.environment >>

  tag_pact_version:
    environment:
      PACT_BROKER_BASE_URL: https://pact-broker-prod.apps.live-1.cloud-platform.service.justice.gov.uk
      PACT_BROKER_DISABLE_SSL_VERIFICATION: "true"
    executor: hmpps/node
    parameters:
      tag:
        type: string
    steps:
      - run:
          name: Tag contract version with deployment
          command: |
            npx --package='@pact-foundation/pact-node' pact-broker create-version-tag \
              --pacticipant="manage-recalls-api" --version="$CIRCLE_SHA1" --tag="<< parameters.tag >>" --auto-create-version \
              --broker-base-url="$PACT_BROKER_BASE_URL" --broker-username="$PACT_BROKER_USERNAME" --broker-password="$PACT_BROKER_PASSWORD"

  e2e-tests:
    executor: hmpps/default
    parameters:
      environment:
        type: string
    steps:
      - checkout
      - run:
          name: Run E2E tests on '<< parameters.environment >>'
          command: ./scripts/run-e2e-tests.sh -e << parameters.environment >>

workflows:
  version: 2

  fake-prisoner-offender-search-api-build:
    unless: << pipeline.parameters.only_run_pact_workflow >>
    jobs:
      - hmpps/build_docker:
          name: build_fake_prisoner_offender_search_api
          image_name: quay.io/hmpps/ppud-fake-prisoner-offender-search-api
          dockerfile_dir: fake-prisoner-offender-search-api
          filters:
            branches:
              only:
                - main

  fake-prison-register-api-build:
    unless: << pipeline.parameters.only_run_pact_workflow >>
    jobs:
      - hmpps/build_docker:
          name: build_fake_prison_register_api
          image_name: quay.io/hmpps/ppud-fake-prison-register-api
          dockerfile_dir: fake-prison-register-api
          filters:
            branches:
              only:
                - main

  fake-court-register-api-build:
    unless: << pipeline.parameters.only_run_pact_workflow >>
    jobs:
      - hmpps/build_docker:
          name: build_fake_court_register_api
          image_name: quay.io/hmpps/ppud-fake-court-register-api
          dockerfile_dir: fake-court-register-api
          filters:
            branches:
              only:
                - main

  fake-prison-api-build:
    unless: << pipeline.parameters.only_run_pact_workflow >>
    jobs:
      - hmpps/build_docker:
          name: build_fake_prison_api
          image_name: quay.io/hmpps/ppud-fake-prison-api
          dockerfile_dir: fake-prison-api
          filters:
            branches:
              only:
                - main

  build-test-and-deploy:
    unless: << pipeline.parameters.only_run_pact_workflow >>
    jobs:
      - validate:
          context:
            - hmpps-common-vars
          # <<: *slack-fail-post-step

      - document-generation-tests:
          context:
            - hmpps-common-vars
          # <<: *slack-fail-post-step

      - hmpps/helm_lint:
          name: helm_lint
          context:
            - hmpps-common-vars
          # <<: *slack-fail-post-step

      - hmpps/build_docker:
          name: build_docker
          no_output_timeout: 30m
          publish: false
          persist_container_image: true
          additional_docker_build_args: --build-arg BUILD_URL=${CIRCLE_BUILD_URL}
          context:
            - hmpps-common-vars
          # <<: *slack-fail-post-step

      - hmpps/trivy_pipeline_scan:
          name: trivy_scan_low_medium_cves
          fail_build: false
          cve_severities_to_check: UNKNOWN,LOW,MEDIUM
          requires:
            - build_docker

      - hmpps/trivy_pipeline_scan:
          name: trivy_scan
          requires:
            - build_docker
          context:
            - hmpps-common-vars
          # <<: *slack-fail-post-step

      - hmpps/publish_docker:
          name: publish_docker
          requires:
            - validate
            - document-generation-tests
            - helm_lint
            - trivy_scan
          filters:
            branches:
              only:
                - main
          context:
            - hmpps-common-vars
          # <<: *slack-fail-post-step

  #     - hmpps/deploy_env:
  #         name: deploy_dev
  #         env: dev
  #         filters:
  #           branches:
  #             only:
  #               - main
  #         requires:
  #           - publish_docker
  #         context:
  #           - hmpps-common-vars
  #         # <<: *slack-fail-post-step

  #     - tag_pact_version:
  #         name: tag_pact_version_dev
  #         tag: deployed:dev
  #         requires:
  #           - deploy_dev
  #         context:
  #           - hmpps-common-vars
  #         # <<: *slack-fail-post-step

  #     - hmpps/sentry_release_and_deploy:
  #         name: notify_sentry_dev
  #         sentry_project: manage-recalls-api
  #         sentry_environment: DEV
  #         sentry_create_release: true
  #         requires:
  #           - deploy_dev
  #         context:
  #           - hmpps-common-vars
  #         # <<: *slack-fail-post-step

  #     - e2e-tests:
  #         name: e2e-tests-dev
  #         environment: dev
  #         requires:
  #           - deploy_dev
  #         context:
  #           - ppud-replacement-circleci-vars
  #           - hmpps-common-vars
  #         # <<: *slack-fail-post-step

  #     - request-preprod-approval:
  #         type: approval
  #         requires:
  #           - e2e-tests-dev

  #     - can_i_deploy:
  #         name: can_i_deploy_to_preprod
  #         environment: preprod
  #         requires:
  #           - request-preprod-approval
  #         context:
  #           - hmpps-common-vars
  #         # <<: *slack-fail-post-step

  #     - hmpps/deploy_env:
  #         name: deploy_preprod
  #         env: preprod
  #         context:
  #           - hmpps-common-vars
  #           - manage-recalls-api-preprod
  #         requires:
  #           - can_i_deploy_to_preprod
  #         # <<: *slack-fail-post-step

  #     - tag_pact_version:
  #         name: tag_pact_version_preprod
  #         tag: deployed:preprod
  #         requires:
  #           - deploy_preprod
  #         context:
  #           - hmpps-common-vars
  #         # <<: *slack-fail-post-step

  #     - hmpps/sentry_release_and_deploy:
  #         name: notify_sentry_preprod
  #         sentry_project: manage-recalls-api
  #         sentry_environment: PRE-PROD
  #         requires:
  #           - deploy_preprod
  #         context:
  #           - hmpps-common-vars
  #         # <<: *slack-fail-post-step

  #     - e2e-tests:
  #         name: e2e-tests-preprod
  #         environment: preprod
  #         requires:
  #           - deploy_preprod
  #         context:
  #           - ppud-replacement-circleci-vars
  #           - hmpps-common-vars
  #         # <<: *slack-fail-post-step

  #     - request-prod-approval:
  #         type: approval
  #         requires:
  #           - e2e-tests-preprod

  #     - can_i_deploy:
  #         name: can_i_deploy_to_prod
  #         environment: prod
  #         requires:
  #           - request-prod-approval
  #         context:
  #           - hmpps-common-vars
  #         # <<: *slack-fail-post-step

  #     - hmpps/deploy_env:
  #         name: deploy_prod
  #         env: prod
  #         context:
  #           - hmpps-common-vars
  #           - manage-recalls-api-prod
  #         requires:
  #           - can_i_deploy_to_prod
  #         slack_notification: true
  #         slack_channel_name: << pipeline.parameters.releases-slack-channel >>
  #         # <<: *slack-fail-post-step

  #     - tag_pact_version:
  #         name: "tag_pact_version_prod"
  #         tag: "deployed:prod"
  #         requires:
  #           - deploy_prod
  #         context:
  #           - hmpps-common-vars
  #         # <<: *slack-fail-post-step

  #     - hmpps/sentry_release_and_deploy:
  #         name: notify_sentry_prod
  #         sentry_project: manage-recalls-api
  #         sentry_environment: PROD
  #         requires:
  #           - deploy_prod
  #         context:
  #           - hmpps-common-vars
  #         # <<: *slack-fail-post-step

  # security:
  #   triggers:
  #     - schedule:
  #         cron: "3 5 * * 1-5"
  #         filters:
  #           branches:
  #             only:
  #               - main
  #   jobs:
  #     - hmpps/trivy_latest_scan:
  #         context:
  #           - hmpps-common-vars
  #         slack_channel: << pipeline.parameters.alerts-slack-channel >>
  #     - hmpps/gradle_owasp_dependency_check:
  #         cache_key: v2_1
  #         context:
  #           - hmpps-common-vars
  #         slack_channel: << pipeline.parameters.alerts-slack-channel >>
  #     - hmpps/veracode_pipeline_scan:
  #         context:
  #           - veracode-credentials
  #           - hmpps-common-vars
  #         slack_channel: << pipeline.parameters.alerts-slack-channel >>

  # security-weekly:
  #   triggers:
  #     - schedule:
  #         cron: "1 6 * * 1"
  #         filters:
  #           branches:
  #             only:
  #               - main
  #   jobs:
  #     - hmpps/veracode_policy_scan:
  #         context:
  #           - veracode-credentials
  #           - hmpps-common-vars
  #         slack_channel: << pipeline.parameters.alerts-slack-channel >>

  # pact_webhook:
  #   when: << pipeline.parameters.only_run_pact_workflow >>
  #   jobs:
  #     - verify_pact_and_publish:
  #         name: verify_pact_and_publish_ui_webhook
  #         context: hmpps-common-vars
  #         consumer_tags: << pipeline.parameters.pact_consumer_tags >>

  # pact_pr:
  #   unless: << pipeline.parameters.only_run_pact_workflow >>
  #   jobs:
  #     - verify_pact_and_publish:
  #         name: verify_pact_and_publish_main
  #         context: hmpps-common-vars
  #         consumer_tags: main
  #         filters:
  #           branches:
  #             ignore:
  #               - main

  # pact_main:
  #   unless: << pipeline.parameters.only_run_pact_workflow >>
  #   jobs:
  #     - verify_pact_and_publish:
  #         name: verify_pact_and_publish_main
  #         context: hmpps-common-vars
  #         consumer_tags: main
  #         filters:
  #           branches:
  #             only:
  #               - main
  #     - verify_pact_and_publish:
  #         name: verify_pact_and_publish_preprod
  #         context: hmpps-common-vars
  #         consumer_tags: deployed:preprod
  #         filters:
  #           branches:
  #             only:
  #               - main
  #     - verify_pact_and_publish:
  #         name: verify_pact_and_publish_prod
  #         context: hmpps-common-vars
  #         consumer_tags: deployed:prod
  #         filters:
  #           branches:
  #             only:
  #               - main
