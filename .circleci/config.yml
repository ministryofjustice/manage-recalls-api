version: 2.1

orbs:
  hmpps: ministryofjustice/hmpps@3.10
  gradle: circleci/gradle@2.2.0

parameters:
  alerts-slack-channel:
    type: string
    default: ppud-replacement-devs
  releases-slack-channel:
    type: string
    default: ppud-replacement-releases
  only_run_pact_workflow:
    type: boolean
    default: false
  pact_consumer_tags:
    type: string
    default: main

executors:
  local-docker:
    docker:
      - image: cimg/python:3.9
    working_directory: ~/app

jobs:
  validate:
    executor:
      name: hmpps/java
      tag: "16.0"
    steps:
      - checkout
      - gradle/with_cache:
          cache_checksum_file: "build.gradle.kts"
          steps:
            - run: ./gradlew -Dorg.gradle.jvmargs="--illegal-access=permit" -Dkotlin.daemon.jvm.options="--illegal-access=permit" check
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/reports/tests

  document-generation-tests:
    executor: local-docker
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build and pull docker containers
          command: |
            docker-compose -f docker-compose-int-test.yml build
            docker-compose -f docker-compose-int-test.yml pull
      - run:
          name: Start docker compose and run the document generation tests
          command: |
            set -x
            docker-compose -f docker-compose-int-test.yml up --exit-code-from manage-recalls-api-int-tests
            docker cp manage-recalls-api-int-tests:/home/circleci/project/build/reports/tests/documentGenerationTest/ test-report
      - store_artifacts:
          path: test-report
          destination: local-test-summary

  verify_pact_and_publish:
    parameters:
      consumer_tags:
        type: string
    environment:
      PACTBROKER_HOST: "pact-broker-prod.apps.live-1.cloud-platform.service.justice.gov.uk"
    executor: hmpps/java
    steps:
      - checkout
      - gradle/with_cache:
          cache_checksum_file: "build.gradle.kts"
          steps:
            - run:
                command: |
                  PACT_PROVIDER_VERSION="$CIRCLE_SHA1" \
                    PACT_PROVIDER_TAG="$CIRCLE_BRANCH" \
                    PACTBROKER_CONSUMERVERSIONSELECTORS_TAGS="<< parameters.consumer_tags >>" \
                    PACT_PUBLISH_RESULTS="true" \
                    PACTBROKER_AUTH_USERNAME="$PACT_BROKER_USERNAME" \
                    PACTBROKER_AUTH_PASSWORD="$PACT_BROKER_PASSWORD" \
                    ./gradlew verifyPactAndPublish
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/reports/tests

workflows:
  version: 2
  build-test-and-deploy:
    unless: << pipeline.parameters.only_run_pact_workflow >>
    jobs:
      - validate:
          filters:
            tags:
              ignore: /.*/

      - document-generation-tests:
          requires:
            - validate

      - hmpps/helm_lint:
          name: helm_lint

      - hmpps/build_docker:
          name: build_docker
          publish: false
          persist_container_image: true

      - hmpps/trivy_pipeline_scan:
          name: trivy_scan_low_medium_cves
          fail_build: false
          cve_severities_to_check: UNKNOWN,LOW,MEDIUM
          requires:
            - build_docker

      - hmpps/trivy_pipeline_scan:
          name: trivy_scan
          requires:
            - build_docker

      - hmpps/publish_docker:
          name: publish_docker
          requires:
            - validate
            - helm_lint
            - trivy_scan
          filters:
            branches:
              only:
                - main

      - hmpps/deploy_env:
          name: deploy_dev
          env: dev
          context: hmpps-common-vars
          filters:
            branches:
              only:
                - main
          requires:
            - publish_docker

      - hmpps/trigger_job:
          name: end-to-end-tests
          repository: manage-recalls-e2e-tests
          token: $CIRCLECI_AUTH_TOKEN
          build_parameters: '{ "only_run_dev_check": true }'
          requires:
            - deploy_dev
          filters:
            branches:
              only:
                - main
          context:
            - ppud-replacement-circleci-vars

      - request-preprod-approval:
          type: approval
          requires:
            - end-to-end-tests
      - hmpps/deploy_env:
          name: deploy_preprod
          env: preprod
          context:
            - hmpps-common-vars
            - ppud-replacement-preprod
          requires:
            - request-preprod-approval

      - request-prod-approval:
          type: approval
          requires:
            - deploy_preprod
      - hmpps/deploy_env:
          name: deploy_prod
          env: prod
          context:
            - hmpps-common-vars
            - ppud-replacement-prod
          requires:
            - request-prod-approval
          slack_notification: true
          slack_channel_name: << pipeline.parameters.releases-slack-channel >>

  security:
    triggers:
      - schedule:
          cron: "3 5 * * 1-5"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/trivy_latest_scan:
          context:
            - hmpps-common-vars
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
      - hmpps/gradle_owasp_dependency_check:
          context:
            - hmpps-common-vars
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
      - hmpps/veracode_pipeline_scan:
          context:
            - veracode-credentials
            - hmpps-common-vars

  security-weekly:
    triggers:
      - schedule:
          cron: "1 6 * * 1"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/veracode_policy_scan:
          context:
            - veracode-credentials
            - hmpps-common-vars

  pact:
    jobs:
      - verify_pact_and_publish:
          context: hmpps-common-vars
          consumer_tags: << pipeline.parameters.pact_consumer_tags >>
