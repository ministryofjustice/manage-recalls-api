version: 2.1

orbs:
  hmpps: ministryofjustice/hmpps@3.11
  gradle: circleci/gradle@2.2.0

parameters:
  alerts-slack-channel:
    type: string
    default: ppud-replacement-devs
  releases-slack-channel:
    type: string
    default: ppud-replacement-releases
  only_run_pact_workflow:
    type: boolean
    default: false
  pact_consumer_tags:
    type: string
    default: main

_db_localstack_docker_config: &db_localstack_docker_config
  - image: cimg/openjdk:16.0
  - image: circleci/postgres:10-alpine-ram
    environment:
      POSTGRES_USER: ppud_user
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: manage_recalls
  - image: localstack/localstack:0.12.10
    environment:
      - SERVICES=s3
      - DATA_DIR=/tmp/localstack/data
      - DOCKER_HOST=unix:///var/run/docker.sock
      - AWS_EXECUTION_ENV=True
      - DEFAULT_REGION=eu-west-2
      - TMPDIR=/private

_db_localstack_gotenberg_docker_config: &db_localstack_gotenberg_docker_config
  - image: cimg/openjdk:16.0
  - image: thecodingmachine/gotenberg:6
  - image: circleci/postgres:10-alpine-ram
    environment:
      POSTGRES_USER: ppud_user
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: manage_recalls
  - image: localstack/localstack:0.12.10
    environment:
      - SERVICES=s3
      - DATA_DIR=/tmp/localstack/data
      - DOCKER_HOST=unix:///var/run/docker.sock
      - AWS_EXECUTION_ENV=True
      - DEFAULT_REGION=eu-west-2
      - TMPDIR=/private

executors:
  local-docker:
    docker:
      - image: cimg/python:3.9
    working_directory: ~/app

jobs:
  validate:
    docker: *db_localstack_docker_config
    steps:
      - checkout
      - hmpps/install_aws_cli
      - hmpps/wait_till_ready:
          port: 4566
      - run:
          name: Create S3 bucket
          command: |
            export AWS_ACCESS_KEY_ID=dontcare
            export AWS_SECRET_ACCESS_KEY=dontcare
            aws s3api create-bucket --bucket test-manage-recalls-api --region eu-west-2 --endpoint-url http://localhost:4566
      - gradle/with_cache:
          cache_checksum_file: "build.gradle.kts"
          steps:
            - run: ./gradlew -Dorg.gradle.jvmargs="--illegal-access=permit" -Dkotlin.daemon.jvm.options="--illegal-access=permit" check
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/reports/tests

  document-generation-tests:
    docker: *db_localstack_gotenberg_docker_config
    steps:
      - checkout
      - hmpps/install_aws_cli
      - hmpps/wait_till_ready:
          port: 4566
      - run:
          name: Create S3 bucket
          command: |
            export AWS_ACCESS_KEY_ID=dontcare
            export AWS_SECRET_ACCESS_KEY=dontcare
            aws s3api create-bucket --bucket test-manage-recalls-api --region eu-west-2 --endpoint-url http://localhost:4566
      - checkout
      - gradle/with_cache:
          cache_checksum_file: "build.gradle.kts"
          steps:
            - run:
                name: Run document generation tests
                command: |
                  export GOTENBERG_ENDPOINT_URL=http://localhost:3000
                  ./gradlew -Dorg.gradle.jvmargs="--illegal-access=permit" -Dkotlin.daemon.jvm.options="--illegal-access=permit" documentGenerationTest
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/reports/tests

  verify_pact_and_publish:
    parameters:
      consumer_tags:
        type: string
    environment:
      PACTBROKER_HOST: "pact-broker-prod.apps.live-1.cloud-platform.service.justice.gov.uk"
    executor: hmpps/java
    docker: *db_localstack_docker_config
    steps:
      - checkout
      - gradle/with_cache:
          cache_checksum_file: "build.gradle.kts"
          steps:
            - run:
                command: |
                  PACT_PROVIDER_VERSION="$CIRCLE_SHA1" \
                    PACT_PROVIDER_TAG="$CIRCLE_BRANCH" \
                    PACTBROKER_CONSUMERVERSIONSELECTORS_TAGS="<< parameters.consumer_tags >>" \
                    PACT_PUBLISH_RESULTS="true" \
                    PACTBROKER_AUTH_USERNAME="$PACT_BROKER_USERNAME" \
                    PACTBROKER_AUTH_PASSWORD="$PACT_BROKER_PASSWORD" \
                    ./gradlew verifyPactAndPublish
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/reports/tests

  can_i_deploy:
    environment:
      PACT_BROKER_BASE_URL: "https://pact-broker-prod.apps.live-1.cloud-platform.service.justice.gov.uk"
      PACT_BROKER_DISABLE_SSL_VERIFICATION: "true"
    executor: hmpps/node
    parameters:
      environment:
        type: string
    steps:
      - run:
          name: Run Pact can-i-deploy
          command: |
            npx --package='@pact-foundation/pact-node' \
                pact-broker can-i-deploy --pacticipant manage-recalls-api --broker-base-url $PACT_BROKER_BASE_URL \
                --version $CIRCLE_SHA1 \
                --to deployed:<< parameters.environment >>

  tag_pact_version:
    environment:
      PACT_BROKER_BASE_URL: "https://pact-broker-prod.apps.live-1.cloud-platform.service.justice.gov.uk"
      PACT_BROKER_DISABLE_SSL_VERIFICATION: "true"
    executor: hmpps/node
    parameters:
      tag:
        type: string
    steps:
      - run:
          name: Tag contract version with deployment
          command: |
            npx --package='@pact-foundation/pact-node' pact-broker create-version-tag \
              --pacticipant="manage-recalls-api" --version="$CIRCLE_SHA1" --tag="<< parameters.tag >>" \
              --broker-base-url="$PACT_BROKER_BASE_URL" --broker-username="$PACT_BROKER_USERNAME" --broker-password="$PACT_BROKER_PASSWORD"

workflows:
  version: 2

  fake-prisoner-offender-search-api-build:
    unless: << pipeline.parameters.only_run_pact_workflow >>
    jobs:
      - hmpps/build_docker:
          name: build_fake_prisoner_offender_search_api
          image_name: quay.io/hmpps/ppud-fake-prisoner-offender-search-api
          dockerfile_dir: fake-prisoner-offender-search-api
          filters:
            branches:
              only:
                - main

  fake-prison-register-api-build:
    unless: << pipeline.parameters.only_run_pact_workflow >>
    jobs:
      - hmpps/build_docker:
          name: build_fake_prison_register_api
          image_name: quay.io/hmpps/ppud-fake-prison-register-api
          dockerfile_dir: fake-prison-register-api
          filters:
            branches:
              only:
                - main

  fake-court-register-api-build:
    unless: << pipeline.parameters.only_run_pact_workflow >>
    jobs:
      - hmpps/build_docker:
          name: build_fake_court_register_api
          image_name: quay.io/hmpps/ppud-fake-court-register-api
          dockerfile_dir: fake-court-register-api
          filters:
            branches:
              only:
                - main

  build-test-and-deploy:
    unless: << pipeline.parameters.only_run_pact_workflow >>
    jobs:
      - validate

      - document-generation-tests

      - hmpps/helm_lint:
          name: helm_lint

      - hmpps/build_docker:
          name: build_docker
          publish: false
          persist_container_image: true

      - hmpps/trivy_pipeline_scan:
          name: trivy_scan_low_medium_cves
          fail_build: false
          cve_severities_to_check: UNKNOWN,LOW,MEDIUM
          requires:
            - build_docker

      - hmpps/trivy_pipeline_scan:
          name: trivy_scan
          requires:
            - build_docker

      - can_i_deploy:
          name: "can_i_deploy_to_dev"
          environment: "dev"
          requires: [ validate ]
          context: [ hmpps-common-vars ]

      - hmpps/publish_docker:
          name: publish_docker
          requires:
            - validate
            - document-generation-tests
            - helm_lint
            - trivy_scan
          filters:
            branches:
              only:
                - main

      - hmpps/deploy_env:
          name: deploy_dev
          env: dev
          context: hmpps-common-vars
          filters:
            branches:
              only:
                - main
          requires:
            - publish_docker

      - tag_pact_version:
          name: "tag_pact_version_dev"
          tag: "deployed:dev"
          requires: [deploy_dev]
          context: [hmpps-common-vars]

      - hmpps/sentry_release_and_deploy:
          name: notify_sentry_dev
          sentry_project: manage-recalls-api
          sentry_environment: DEV
          sentry_create_release: true
          requires:
            - deploy_dev

      - hmpps/trigger_job:
          name: end-to-end-tests-dev
          repository: manage-recalls-e2e-tests
          token: $CIRCLECI_AUTH_TOKEN
          build_parameters: '{ "only_run_deploy_check": true, "e2e_environment": "dev" }'
          requires:
            - deploy_dev
          filters:
            branches:
              only:
                - main
          context:
            - ppud-replacement-circleci-vars

      - request-preprod-approval:
          type: approval
          requires:
            - end-to-end-tests-dev

      - can_i_deploy:
          name: "can_i_deploy_to_preprod"
          environment: "preprod"
          requires: [ request-preprod-approval ]
          context: [ hmpps-common-vars ]

      - hmpps/deploy_env:
          name: deploy_preprod
          env: preprod
          context:
            - hmpps-common-vars
            - ppud-replacement-preprod
          requires:
            - can_i_deploy_to_preprod

      - tag_pact_version:
          name: "tag_pact_version_preprod"
          tag: "deployed:preprod"
          requires: [deploy_preprod]
          context: [hmpps-common-vars]

      - hmpps/sentry_release_and_deploy:
          name: notify_sentry_preprod
          sentry_project: manage-recalls-api
          sentry_environment: PRE-PROD
          requires:
            - deploy_preprod

      - hmpps/trigger_job:
          name: end-to-end-tests-preprod
          repository: manage-recalls-e2e-tests
          token: $CIRCLECI_AUTH_TOKEN
          build_parameters: '{ "only_run_deploy_check": true, "e2e_environment": "preprod" }'
          requires:
            - deploy_preprod
          filters:
            branches:
              only:
                - main
          context:
            - ppud-replacement-circleci-vars

      - request-prod-approval:
          type: approval
          requires:
            - end-to-end-tests-preprod

      - can_i_deploy:
          name: "can_i_deploy_to_prod"
          environment: "prod"
          requires: [ request-prod-approval ]
          context: [ hmpps-common-vars ]

      - hmpps/deploy_env:
          name: deploy_prod
          env: prod
          context:
            - hmpps-common-vars
            - ppud-replacement-prod
          requires:
            - can_i_deploy_to_prod
          slack_notification: true
          slack_channel_name: << pipeline.parameters.releases-slack-channel >>

      - tag_pact_version:
          name: "tag_pact_version_prod"
          tag: "deployed:prod"
          requires: [deploy_prod]
          context: [hmpps-common-vars]

      - hmpps/sentry_release_and_deploy:
          name: notify_sentry_prod
          sentry_project: manage-recalls-api
          sentry_environment: PROD
          requires:
            - deploy_prod

  security:
    triggers:
      - schedule:
          cron: "3 5 * * 1-5"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/trivy_latest_scan:
          context:
            - hmpps-common-vars
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
      - hmpps/gradle_owasp_dependency_check:
          context:
            - hmpps-common-vars
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
      - hmpps/veracode_pipeline_scan:
          context:
            - veracode-credentials
            - hmpps-common-vars

  security-weekly:
    triggers:
      - schedule:
          cron: "1 6 * * 1"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/veracode_policy_scan:
          context:
            - veracode-credentials
            - hmpps-common-vars

  pact:
    jobs:
      - verify_pact_and_publish:
          context: hmpps-common-vars
          consumer_tags: << pipeline.parameters.pact_consumer_tags >>
